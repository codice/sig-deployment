# Default values for ddf.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: docker.local:5000
  repository: codice/ddf
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

hostname: "ddf"
internalHostname: "ddf"
installProfile: "development"
securityProfile:
  name: ""
# Path to keystores located on host machine
keystoresPath: ""
# Path to configs located on host machine
configsPath: ""

tls:
  secret:
    # name of secret to use for injecting cert/key into ddf instance
    # set the correct keys to match contents of the tls secret. defaults match what k8s uses by default
    name: "keystore-secret"
    certKey: tls.crt
    keyKey: tls.key
    caKey: ca.crt
  # ca is used to configure a configMap that contains the ca belongint to the tls key being used by the ddf instance
  ca:
    # change the name to the correct configMap when using injected certificates
    # change the name of the key containing the ca if necessary
    # name: ""
    caKey: tls.ca-bundle
  # ConfigMap name containing all private/custom CA certificates that need to be added to the truststore
#  trustedCAs: ""
  

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  httpsPort: 8993
  httpPort: 8181

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
